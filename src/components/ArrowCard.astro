---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "@components/FormattedDate.astro";

type Props = {
  entry: CollectionEntry<"issues"> | CollectionEntry<"projects">;
};

const { entry } = Astro.props as {
  entry: CollectionEntry<"issues"> | CollectionEntry<"projects">;
};

// Type guard to check if entry is an issue
const isIssue = (entry: Props["entry"]): entry is CollectionEntry<"issues"> => {
  return entry.collection === "issues";
};
---

<a
  href={`/${entry.collection}/${entry.id}`}
  class="group relative block rounded-lg border border-black/15 px-4 py-3 transition-colors duration-300 ease-in-out hover:bg-black/5 hover:text-black focus-visible:bg-black/5 focus-visible:text-black dark:border-white/20 dark:hover:bg-white/5 dark:hover:text-white dark:focus-visible:bg-white/5 dark:focus-visible:text-white"
>
  <div class="flex items-center gap-4">
    <div class="min-w-24 text-sm text-gray-500 dark:text-gray-400">
      <FormattedDate date={entry.data.date} />
    </div>
    <div class="font-semibold">
      {entry.data.title}
    </div>
  </div>

  <div
    class="pointer-events-none absolute top-[calc(100%+0.5rem)] right-0 left-0 z-10 hidden translate-y-2 rounded-lg border-2 border-black/20 bg-white p-4 opacity-0 shadow-xl transition-all duration-200 ease-out group-hover:pointer-events-auto group-hover:block group-hover:translate-y-0 group-hover:opacity-100 dark:border-white/30 dark:bg-neutral-800 dark:shadow-2xl dark:shadow-black/50"
  >
    <div
      class="absolute -top-2 left-6 h-4 w-4 rotate-45 border-t-2 border-l-2 border-black/20 bg-white dark:border-white/30 dark:bg-neutral-800"
    >
    </div>
    <div class="text-sm leading-relaxed flex-col gap-4">
      {
        isIssue(entry) && entry.data.tags && entry.data.tags.length > 0 && (
          <div class="mt-1 flex flex-wrap gap-1">
            {entry.data.tags.map((tag: string) => (
              <span class="rounded-sm border border-black/15 px-1.5 py-0.5 text-xs dark:border-white/20">
                {tag}
              </span>
            ))}
          </div>
        )
      }
      {entry.data.description}
    </div>
  </div>

  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    class="absolute top-1/2 right-2 size-5 -translate-y-1/2 fill-none stroke-current stroke-2"
  >
    <line
      x1="5"
      y1="12"
      x2="19"
      y2="12"
      class="translate-x-3 scale-x-0 transition-transform duration-300 ease-in-out group-hover:translate-x-0 group-hover:scale-x-100 group-focus-visible:translate-x-0 group-focus-visible:scale-x-100"
    ></line>
    <polyline
      points="12 5 19 12 12 19"
      class="-translate-x-1 transition-transform duration-300 ease-in-out group-hover:translate-x-0 group-focus-visible:translate-x-0"
    ></polyline>
  </svg>
</a>
